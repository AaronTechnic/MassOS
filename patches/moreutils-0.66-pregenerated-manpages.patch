diff -ruN old/chronic.1 new/chronic.1
--- old/chronic.1	1970-01-01 01:00:00.000000000 +0100
+++ new/chronic.1	2021-10-27 13:36:52.908957970 +0100
@@ -0,0 +1,181 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "CHRONIC 1"
+.TH CHRONIC 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+chronic \- runs a command quietly unless it fails
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+chronic [\-ev] \s-1COMMAND...\s0
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+chronic runs a command, and arranges for its standard out and standard
+error to only be displayed if the command fails (exits nonzero or crashes).
+If the command succeeds, any extraneous output will be hidden.
+.PP
+A common use for chronic is for running a cron job. Rather than
+trying to keep the command quiet, and having to deal with mails containing
+accidental output when it succeeds, and not verbose enough output when it
+fails, you can just run it verbosely always, and use chronic to hide
+the successful output.
+.PP
+.Vb 2
+\&        0    1 * * * chronic backup # instead of backup >/dev/null 2>&1
+\&        */20 * * * * chronic \-ve my_script # verbose for debugging
+.Ve
+.SH "OPTIONS"
+.IX Header "OPTIONS"
+.IP "\-v" 4
+.IX Item "-v"
+Verbose output (distinguishes between \s-1STDOUT\s0 and \s-1STDERR,\s0 also reports \s-1RETVAL\s0)
+.IP "\-e" 4
+.IX Item "-e"
+Stderr triggering. Triggers output when stderr output length is non-zero.
+Without \-e chronic needs non-zero return value to trigger output.
+.Sp
+In this mode, chronic's return value will be \f(CW2\fR if the command's return
+value is \f(CW0\fR but the command printed to stderr.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2010 by Joey Hess <id@joeyh.name>
+.PP
+Original concept and \*(L"chronic\*(R" name by Chuck Houpt.
+Code for verbose and stderr trigger by Tomas 'Harvie' Mudrunka 2016.
+.PP
+Licensed under the \s-1GNU GPL\s0 version 2 or higher.
diff -ruN old/combine.1 new/combine.1
--- old/combine.1	1970-01-01 01:00:00.000000000 +0100
+++ new/combine.1	2021-10-27 13:36:52.908957970 +0100
@@ -0,0 +1,196 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "COMBINE 1"
+.TH COMBINE 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+combine \- combine sets of lines from two files using boolean operations
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+combine file1 and file2
+.PP
+combine file1 not file2
+.PP
+combine file1 or file2
+.PP
+combine file1 xor file2
+.PP
+_ file1 and file2 _
+.PP
+_ file1 not file2 _
+.PP
+_ file1 or file2 _
+.PP
+_ file1 xor file2 _
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+\&\fBcombine\fR combines the lines in two files. Depending on the boolean
+operation specified, the contents will be combined in different ways:
+.IP "and" 4
+.IX Item "and"
+Outputs lines that are in file1 if they are also present in file2.
+.IP "not" 4
+.IX Item "not"
+Outputs lines that are in file1 but not in file2.
+.IP "or" 4
+.IX Item "or"
+Outputs lines that are in file1 or file2.
+.IP "xor" 4
+.IX Item "xor"
+Outputs lines that are in either file1 or file2, but not in both files.
+.PP
+\&\*(L"\-\*(R" can be specified for either file to read stdin for that file.
+.PP
+The input files need not be sorted, and the lines are output in the order
+they occur in file1 (followed by the order they occur in file2 for the two
+\&\*(L"or\*(R" operations). Bear in mind that this means that the operations are not
+commutative; \*(L"a and b\*(R" will not necessarily be the same as \*(L"b and a\*(R". To
+obtain commutative behavior sort and uniq the result.
+.PP
+Note that this program can be installed as \*(L"_\*(R" to allow for the syntactic
+sugar shown in the latter half of the synopsis (similar to the test/[
+command). It is not currently installed as \*(L"_\*(R" by default, but you can
+alias it to that if you like.
+.SH "SEE ALSO"
+.IX Header "SEE ALSO"
+\&\fBjoin\fR\|(1)
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2006 by Joey Hess <id@joeyh.name>
+.PP
+Licensed under the \s-1GNU GPL.\s0
diff -ruN old/errno.1 new/errno.1
--- old/errno.1	1970-01-01 01:00:00.000000000 +0100
+++ new/errno.1	2021-10-27 13:36:52.908957970 +0100
@@ -0,0 +1,74 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH errno 1 2012-06-05 moreutils moreutils
+.SH NAME
+errno \- look up errno names and descriptions
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBerrno\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+{\fIname-or-code\fR}
+'in \n(.iu-\nxu
+.ad b
+'hy
+'nh
+.fi
+.ad l
+\fBerrno\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[-ls] [--list]
+'in \n(.iu-\nxu
+.ad b
+'hy
+'nh
+.fi
+.ad l
+\fBerrno\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[-s] [--search] {\fIword\fR}
+'in \n(.iu-\nxu
+.ad b
+'hy
+'nh
+.fi
+.ad l
+\fBerrno\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[-S] [--search-all-locales] {\fIword\fR}
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBerrno\fR looks up errno macro names,
+errno codes, and the corresponding descriptions. For example,
+if given \*(T<ENOENT\*(T> on a Linux system, it
+prints out the code 2 and the description "No such file or directory".
+If given the code 2, it prints \*(T<ENOENT\*(T>
+and the same description.
+.SH OPTIONS
+.TP
+\*(T<\fB\-l\fR\*(T>, \*(T<\fB\-\-list\fR\*(T>
+List all errno values.
+.TP
+\*(T<\fB\-s\fR\*(T>, \*(T<\fB\-\-search\fR\*(T>
+Search for errors whose description contains
+all the given words (case-insensitive).
+.TP
+\*(T<\fB\-S\fR\*(T>, \*(T<\fB\-\-search\-all\-locales\fR\*(T>
+Like \*(T<\fB\-\-search\fR\*(T>, but searches all
+installed locales.
+.SH AUTHOR
+Lars Wirzenius
+.SH "SEE ALSO"
+\fBerrno\fR(3)
diff -ruN old/ifdata.1 new/ifdata.1
--- old/ifdata.1	1970-01-01 01:00:00.000000000 +0100
+++ new/ifdata.1	2021-10-27 13:36:52.908957970 +0100
@@ -0,0 +1,145 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH ifdata 1 2006-03-07 moreutils moreutils
+.SH NAME
+ifdata \- get network interface info without parsing ifconfig output
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBifdata\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[options] {\fIiface\fR}
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBifdata\fR can be used to check for
+the existence of a network interface, or to get
+information about the interface, such as its IP
+address. Unlike \fBifconfig\fR or
+\fBip\fR, \fBifdata\fR
+has simple to parse output that is designed to be
+easily used by a shell script.
+.SH OPTIONS
+.TP
+\*(T<\fB\-h\fR\*(T>
+Print out a help summary.
+.TP
+\*(T<\fB\-e\fR\*(T>
+Test to see if the interface exists,
+exit nonzero if it does not.
+.TP
+\*(T<\fB\-p\fR\*(T>
+Prints out the whole configuration of
+the interface.
+.TP
+\*(T<\fB\-pe\fR\*(T>
+Prints "yes" or "no" if the interface
+exists or not.
+.TP
+\*(T<\fB\-pa\fR\*(T>
+Prints the IPv4 address of the
+interface.
+.TP
+\*(T<\fB\-pn\fR\*(T>
+Prints the netmask of the
+interface.
+.TP
+\*(T<\fB\-pN\fR\*(T>
+Prints the network address of the
+interface.
+.TP
+\*(T<\fB\-pb\fR\*(T>
+Prints the broadcast address of the
+interface.
+.TP
+\*(T<\fB\-pm\fR\*(T>
+Prints the MTU of the interface.
+.PP
+Following options are Linux only.
+.TP
+\*(T<\fB\-ph\fR\*(T>
+Prints the hardware address of the
+interface. Exit with a failure exit code
+if there is not hardware address for the
+given network interface.
+.TP
+\*(T<\fB\-pf\fR\*(T>
+Prints the flags of the
+interface.
+.TP
+\*(T<\fB\-si\fR\*(T>
+Prints out all the input statistics
+of the interface.
+.TP
+\*(T<\fB\-sip\fR\*(T>
+Prints the number of input packets.
+.TP
+\*(T<\fB\-sib\fR\*(T>
+Prints the number of input bytes.
+.TP
+\*(T<\fB\-sie\fR\*(T>
+Prints the number of input errors.
+.TP
+\*(T<\fB\-sid\fR\*(T>
+Prints the number of dropped input
+packets.
+.TP
+\*(T<\fB\-sif\fR\*(T>
+Prints the number of input fifo overruns.
+.TP
+\*(T<\fB\-sic\fR\*(T>
+Print the number of compressed input
+packets.
+.TP
+\*(T<\fB\-sim\fR\*(T>
+Prints the number of input
+multicast packets.
+.TP
+\*(T<\fB\-so\fR\*(T>
+Prints out all the output statistics
+of the interface.
+.TP
+\*(T<\fB\-sop\fR\*(T>
+Prints the number of output packets.
+.TP
+\*(T<\fB\-sob\fR\*(T>
+Prints the number of output bytes.
+.TP
+\*(T<\fB\-soe\fR\*(T>
+Prints the number of output errors.
+.TP
+\*(T<\fB\-sod\fR\*(T>
+Prints the number of dropped
+output packets.
+.TP
+\*(T<\fB\-sof\fR\*(T>
+Prints the number of output fifo overruns.
+.TP
+\*(T<\fB\-sox\fR\*(T>
+Print the number of output collisions.
+.TP
+\*(T<\fB\-soc\fR\*(T>
+Prints the number of output carrier
+losses.
+.TP
+\*(T<\fB\-som\fR\*(T>
+Prints the number of output multicast
+packets.
+.TP
+\*(T<\fB\-bips\fR\*(T>
+Prints the number of bytes of
+incoming traffic measured in one second.
+.TP
+\*(T<\fB\-bops\fR\*(T>
+Prints the number of bytes of
+outgoing traffic measured in one second.
+.SH AUTHOR
+Benjamin BAYART
diff -ruN old/ifne.1 new/ifne.1
--- old/ifne.1	1970-01-01 01:00:00.000000000 +0100
+++ new/ifne.1	2021-10-27 13:36:52.908957970 +0100
@@ -0,0 +1,44 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH ifne 1 2008-05-01 moreutils moreutils
+.SH NAME
+ifne \- Run command if the standard input is not empty
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBifne [-n] command\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBifne\fR runs the following command if and only if
+the standard input is not empty.
+.SH OPTIONS
+.TP
+\*(T<\fB\-n\fR\*(T>
+Reverse operation. Run the command if the standard input is empty.
+
+Note that if the standard input is not empty, it is passed through ifne
+in this case.
+.SH EXAMPLE
+'nh
+.fi
+.ad l
+\fBfind . -name core | ifne mail -s "Core files found" root\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH AUTHOR
+Copyright 2008 by Javier Merino <cibervicho@gmail.com>
+.PP
+Licensed under the GNU GPL
diff -ruN old/isutf8.1 new/isutf8.1
--- old/isutf8.1	1970-01-01 01:00:00.000000000 +0100
+++ new/isutf8.1	2021-10-27 13:36:52.912291648 +0100
@@ -0,0 +1,55 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH isutf8 1 "29 September 2021" moreutils moreutils
+.SH NAME
+isutf8 \- check whether files are valid UTF-8
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBisutf8\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[\fB-hqliv\fR] [\fB--help\fR] [\fB--quiet\fR] [\fB--list\fR] [\fB--invert\fR] [\fB--verbose\fR] [\fIfile\fR\&...]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBisutf8\fR checks whether files are
+syntactically valid UTF-8. Input is either files named on the
+command line, or the standard input. Notices about files with
+invalid UTF-8 are printed to standard output.
+.SH OPTIONS
+.TP
+\*(T<\fB\-h\fR\*(T>, \*(T<\fB\-\-help\fR\*(T>
+Print out a help summary.
+.TP
+\*(T<\fB\-q\fR\*(T>, \*(T<\fB\-\-quiet\fR\*(T>
+Don't print messages telling which files are
+invalid UTF-8, merely indicate it with the exit
+status.
+.TP
+\*(T<\fB\-l\fR\*(T>, \*(T<\fB\-\-list\fR\*(T>
+Print only the names of files containing invalid
+UTF-8.
+.TP
+\*(T<\fB\-i\fR\*(T>, \*(T<\fB\-\-invert\fR\*(T>
+Invert the selection: list UTF-8 compatible
+files.
+.TP
+\*(T<\fB\-v\fR\*(T>, \*(T<\fB\-\-verbose\fR\*(T>
+Also print an hexdump-like view of the error and some
+context.
+.SH "EXIT STATUS"
+If the file is valid UTF-8, the exit status is zero.
+If the file is not valid UTF-8, or there is some
+error, the exit status is non-zero.
+.SH AUTHOR
+Lars Wirzenius, Julien Palard
+.SH "SEE ALSO"
+\fButf8\fR(7)
diff -ruN old/lckdo.1 new/lckdo.1
--- old/lckdo.1	1970-01-01 01:00:00.000000000 +0100
+++ new/lckdo.1	2021-10-27 13:36:52.912291648 +0100
@@ -0,0 +1,72 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH lckdo 1 2007-08-15 moreutils moreutils
+.SH NAME
+lckdo \- run a program with a lock held
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBlckdo\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[options] {lockfile} {program} [arguments]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBlckdo\fR runs a program with a lock
+held, in order to prevent multiple processes from running in
+parallel. Use just like \fBnice\fR or
+\fBnohup\fR.
+.PP
+Now that util-linux contains a similar command
+named \fBflock\fR, lckdo is deprecated,
+and will be removed from some future version of moreutils.
+.SH OPTIONS
+.TP
+\*(T<\fB\-w\fR\*(T>
+If the lock is already held by another process,
+wait for it to complete instead of failing
+immediately.
+.TP
+\*(T<\fB\-W {sec}\fR\*(T>
+The same as -w but wait not more than sec
+seconds.
+.TP
+\*(T<\fB\-e\fR\*(T>
+Execute the program directly without forking and
+waiting (keeps an extra file descriptor open).
+.TP
+\*(T<\fB\-E {nnn}\fR\*(T>
+Set the file descriptor number to keep open when
+exec()ing (implies -e).
+.TP
+\*(T<\fB\-n\fR\*(T>
+Do not create the lock file if it does not
+exist.
+.TP
+\*(T<\fB\-q\fR\*(T>
+Produce no output if lock is already held.
+.TP
+\*(T<\fB\-s\fR\*(T>
+Lock in shared (read) mode.
+.TP
+\*(T<\fB\-x\fR\*(T>
+Lock in exclusive (write) mode (default).
+.TP
+\*(T<\fB\-t\fR\*(T>
+Test for lock existence.
+.SH "EXIT STATUS"
+If the lock was successfully acquired, the return value is that
+of the program invoked by \fBlckdo\fR. If the lock
+couldn't be acquired, EX_TEMPFAIL is returned. If there was a problem
+opening/creating or locking the lock file, EX_CANTCREAT or EX_OSERR
+will be returned.
+.SH AUTHOR
+Michael Tokarev
diff -ruN old/Makefile new/Makefile
--- old/Makefile	2021-10-27 13:27:31.573916239 +0100
+++ new/Makefile	2021-10-27 13:37:25.002432242 +0100
@@ -1,6 +1,6 @@
 BINS=isutf8 ifdata ifne pee sponge mispipe lckdo parallel errno
 PERLSCRIPTS=vidir vipe ts combine zrun chronic
-MANS=sponge.1 vidir.1 vipe.1 isutf8.1 ts.1 combine.1 ifdata.1 ifne.1 pee.1 zrun.1 chronic.1 mispipe.1 lckdo.1 parallel.1 errno.1
+MANS=sponge.1 vidir.1 vipe.1 isutf8.1 ts.1moreutils combine.1 ifdata.1 ifne.1 pee.1 zrun.1 chronic.1 mispipe.1 lckdo.1 errno.1
 CFLAGS?=-O2 -g -Wall
 INSTALL_BIN?=install -s
 PREFIX?=/usr
@@ -13,10 +13,10 @@

 DOCBOOK2XMAN=xsltproc --param man.authors.section.enabled 0 $(DOCBOOKXSL)/manpages/docbook.xsl

-all: $(BINS) $(MANS)
+all: $(BINS)

 clean:
-	rm -f $(BINS) $(MANS) dump.c errnos.h errno.o \
+	rm -f $(BINS) dump.c errnos.h errno.o \
 		is_utf8/*.o is_utf8/isutf8

 isutf8: is_utf8/*.c is_utf8/*.h
diff -ruN old/mispipe.1 new/mispipe.1
--- old/mispipe.1	1970-01-01 01:00:00.000000000 +0100
+++ new/mispipe.1	2021-10-27 13:36:52.912291648 +0100
@@ -0,0 +1,39 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH mispipe 1 2006-09-07 moreutils moreutils
+.SH NAME
+mispipe \- pipe two commands, returning the exit status of the first
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBmispipe\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[\fI"command1"\fR] [\fI"command2"\fR]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBmispipe\fR pipes two commands
+together like the shell does, but unlike piping in the
+shell, which returns the exit status of the last command;
+when using mispipe, the exit status of the first command
+is returned.
+.PP
+Note that some shells, notably \fBbash\fR,
+do offer a pipefail option, however, that option does not
+behave the same since it makes a failure of any command in
+the pipeline be returned, not just the exit status of the
+first.
+.SH "EXIT STATUS"
+The exit status of the first command. If the process
+terminated abnormally (due to a signal), 128 will be added
+to its exit status.
+.SH AUTHOR
+Nathanael Nerode
diff -ruN old/parallel-moreutils.1 new/parallel-moreutils.1
--- old/parallel-moreutils.1	1970-01-01 01:00:00.000000000 +0100
+++ new/parallel-moreutils.1	2021-10-27 13:36:52.912291648 +0100
@@ -0,0 +1,90 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH parallel 1 2009-07-02 moreutils moreutils
+.SH NAME
+parallel \- run programs in parallel
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBparallel\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[options] [command] \fB--\fR [argument ...]
+'in \n(.iu-\nxu
+.ad b
+'hy
+'nh
+.fi
+.ad l
+\fBparallel\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[options] \fB--\fR [command ...]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBparallel\fR runs the specified command,
+passing it a single one of the specified arguments. This is
+repeated for each argument. Jobs may be run in
+parallel. The default is to run one job per CPU.
+.PP
+If no command is specified before the --,
+the commands after it are instead run in parallel.
+.SH OPTIONS
+.TP
+\*(T<\fB\-j maxjobs\fR\*(T>
+Use to limit the number of jobs
+that are run at the same time.
+.TP
+\*(T<\fB\-l maxload\fR\*(T>
+Wait as needed to avoid starting
+new jobs when the system's load average
+is not below the specified limit.
+.TP
+\*(T<\fB\-i\fR\*(T>
+Normally the command is passed the
+argument at the end of its command line. With
+this option, any instances of "{}" in
+the command are replaced with the argument.
+.TP
+\*(T<\fB\-n\fR\*(T>
+Number of arguments to pass to a
+command at a time. Default is 1.
+Incompatible with -i
+.SH EXAMPLE
+\fBparallel sh -c "echo hi; sleep 2; echo bye" -- 1 2 3\fR
+.PP
+This runs three subshells that each print a message, delay,
+and print another message. If your system has multiple
+CPUs, parallel will run some of the jobs in parallel,
+which should be clear from the order the messages are
+output.
+.PP
+\fBparallel -j 3 ufraw -o processed -- *.NEF\fR
+.PP
+This runs three ufraw processes at the same time until
+all of the NEF files have been processed.
+.PP
+\fBparallel -j 3 -- ls df "echo hi"\fR
+.PP
+This runs three independent commands in parallel.
+.SH "EXIT STATUS"
+Its exit status is the combination of the exit statuses of each
+command ran, ORed together. (Thus, if any one command
+exits nonzero, \fBparallel\fR as a whole will exit nonzero.)
+.SH NOTES
+All output to stdout and stderr is serialised through a
+corresponding internal pipe, in order to prevent annoying
+concurrent output behaviour. Note that serialisation is not
+done on any other file descriptors and file position based
+access to a nonstandard file descriptor might have unexpected
+results.
+.SH AUTHOR
+Tollef Fog Heen
diff -ruN old/pee.1 new/pee.1
--- old/pee.1	1970-01-01 01:00:00.000000000 +0100
+++ new/pee.1	2021-10-27 13:36:52.912291648 +0100
@@ -0,0 +1,55 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH pee 1 2016-12-20 moreutils moreutils
+.SH NAME
+pee \- tee standard input to pipes
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBpee\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[--[no-]ignore-sigpipe] [--[no-]ignore-write-errors] [\fI"command"\fR\&...]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBpee\fR is like \fBtee\fR
+but for pipes. Each command is run and fed a copy of the
+standard input. The output of all commands is sent to
+stdout.
+.PP
+Note that while this is similar to
+\fBtee\fR, a copy of the input is not sent
+to stdout, like tee does. If that is desired, use
+\fBpee cat ...\fR
+.SH OPTIONS
+.TP
+\*(T<\fB\-\-ignore\-sigpipe\fR\*(T>, \*(T<\fB\-\-no\-ignore\-sigpipe\fR\*(T>
+Do (not) ignore SIGPIPE. Any command started
+by \fBpee\fR might cause a SIGPIPE
+when it exists. If you ignore SIGPIPE, you
+probably also want to ignore write errors (see
+below). Ignoring SIGPIPE is the default
+behaviour.
+.TP
+\*(T<\fB\-\-ignore\-write\-errors\fR\*(T>, \*(T<\fB\-\-no\-ignore\-write\-errors\fR\*(T>
+Do (not) ignore write errors. When a command
+started by \fBpee\fR is no more
+accepting data via the pipe between itself and
+\fBpee\fR, a write error occurs in
+\fBpee\fR. If this error is not
+ignored, \fBpee\fR is going to
+terminate all child processes and exists. Ignoring
+write errors is the default behaviour.
+.SH "SEE ALSO"
+\fBtee\fR(1),
+\fBpipe\fR(7)
+.SH AUTHOR
+Miek Gieben
diff -ruN old/sponge.1 new/sponge.1
--- old/sponge.1	1970-01-01 01:00:00.000000000 +0100
+++ new/sponge.1	2021-10-27 13:36:52.915625327 +0100
@@ -0,0 +1,53 @@
+.\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH sponge 1 2006-02-19 moreutils moreutils
+.SH NAME
+sponge \- soak up standard input and write to a file
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBsed '...' file | grep '...' | sponge [-a] file\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+\fBsponge\fR reads standard input and
+writes it out to the specified file. Unlike a shell
+redirect, \fBsponge\fR soaks up all its input before
+writing the output file. This allows constructing
+pipelines that read from and write to
+the same file.
+.PP
+\fBsponge\fR preserves the
+permissions of the output file
+if it already exists.
+.PP
+When possible, \fBsponge\fR creates or updates the
+output file atomically by renaming a temp
+file into place. (This cannot be done
+if TMPDIR is not in the same filesystem.)
+.PP
+If the output file is a special file or symlink,
+the data will be written to it, non-atomically.
+.PP
+If no file is specified, \fBsponge\fR outputs to
+stdout.
+.SH OPTIONS
+.TP
+\*(T<\fB\-a\fR\*(T>
+Replace the file
+with a new file that contains
+the file's original content,
+with the standard input
+appended to it. This is done
+atomically when possible.
+.SH AUTHOR
+Colin Watson and Tollef Fog Heen
diff -ruN old/ts.1moreutils new/ts.1moreutils
--- old/ts.1moreutils	1970-01-01 01:00:00.000000000 +0100
+++ new/ts.1moreutils	2021-10-27 13:36:52.915625327 +0100
@@ -0,0 +1,181 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "TS 1"
+.TH TS 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+ts \- timestamp input
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+ts [\-r] [\-i | \-s] [\-m] [format]
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+ts adds a timestamp to the beginning of each line of input.
+.PP
+The optional format parameter controls how the timestamp is formatted,
+as used by \fBstrftime\fR\|(3). The default format is \*(L"%b \f(CW%d\fR \f(CW%H:\fR%M:%S\*(R". In
+addition to the regular strftime conversion specifications,
+\&\*(L"%.S\*(R" and \*(L"%.s\*(R" and \*(L"%.T\*(R"
+are like \*(L"%S\*(R" and \*(L"%s\*(R" and \*(L"%T\*(R", but provide subsecond resolution
+(ie, \*(L"30.00001\*(R" and \*(L"1301682593.00001\*(R" and \*(L"1:15:30.00001\*(R").
+.PP
+If the \-r switch is passed, it instead converts existing timestamps in
+the input to relative times, such as \*(L"15m5s ago\*(R". Many common timestamp
+formats are supported. Note that the Time::Duration and Date::Parse perl
+modules are required for this mode to work. Currently, converting localized
+dates is not supported.
+.PP
+If both \-r and a format is passed, the existing timestamps are
+converted to the specified format.
+.PP
+If the \-i or \-s switch is passed, ts reports incremental timestamps instead of
+absolute ones. The default format changes to \*(L"%H:%M:%S\*(R", and \*(L"%.S\*(R" and \*(L"%.s\*(R" can
+be used as well. In case of \-i, every timestamp will be the time elapsed since
+the last timestamp. In case of \-s, the time elapsed since start of the program
+is used.
+.PP
+The \-m switch makes the system's monotonic clock be used.
+.SH "ENVIRONMENT"
+.IX Header "ENVIRONMENT"
+The standard \s-1TZ\s0 environment variable controls what time zone dates
+are assumed to be in, if a timezone is not specified as part of the date.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2006 by Joey Hess <id@joeyh.name>
+.PP
+Licensed under the \s-1GNU GPL.\s0
diff -ruN old/vidir.1 new/vidir.1
--- old/vidir.1	1970-01-01 01:00:00.000000000 +0100
+++ new/vidir.1	2021-10-27 13:36:52.915625327 +0100
@@ -0,0 +1,194 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "VIDIR 1"
+.TH VIDIR 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+vidir \- edit directories and filenames
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+\&\fBvidir\fR [\fB\-\-verbose\fR] [\fIdirectory\fR|\fIfile\fR|\fB\-\fR]...
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+\&\fBvidir\fR allows editing of directories and filenames in a text editor.  If no
+\&\fIdirectory\fR is specified, the filenames of the current directory are edited.
+.PP
+When editing a directory, each item in the directory will appear on its own
+numbered line. These numbers are how vidir keeps track of what items are
+changed. Delete lines to remove files from the directory, or
+edit filenames to rename files. You can also switch pairs of numbers to
+swap filenames.
+.PP
+Filenames to be edited may be given any combination of \fIdirectory\fRs (which
+will be expanded to the non-recursive list of all files within \fIdirectory\fR),
+\&\fIfile\fRs, or \fI\-\fR.  If the latter is specified, \fBvidir\fR reads a list of
+filenames from stdin and displays those for editing.
+.SH "OPTIONS"
+.IX Header "OPTIONS"
+.IP "\-v, \-\-verbose" 4
+.IX Item "-v, --verbose"
+Verbosely display the actions taken by the program.
+.SH "EXAMPLES"
+.IX Header "EXAMPLES"
+.IP "vidir" 4
+.IX Item "vidir"
+.PD 0
+.IP "vidir *.jpeg" 4
+.IX Item "vidir *.jpeg"
+.PD
+Typical uses.
+.IP "find | vidir \-" 4
+.IX Item "find | vidir -"
+Edit subdirectory contents too. To delete subdirectories,
+delete all their contents and the subdirectory itself in the editor.
+.IP "find \-type f | vidir \-" 4
+.IX Item "find -type f | vidir -"
+Edit all files under the current directory and subdirectories.
+.SH "ENVIRONMENT VARIABLES"
+.IX Header "ENVIRONMENT VARIABLES"
+.IP "\s-1EDITOR\s0" 4
+.IX Item "EDITOR"
+Editor to use.
+.IP "\s-1VISUAL\s0" 4
+.IX Item "VISUAL"
+Also supported to determine what editor to use.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2006 by Joey Hess <id@joeyh.name>
+.PP
+Licensed under the \s-1GNU GPL.\s0
diff -ruN old/vipe.1 new/vipe.1
--- old/vipe.1	1970-01-01 01:00:00.000000000 +0100
+++ new/vipe.1	2021-10-27 13:36:52.915625327 +0100
@@ -0,0 +1,177 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "VIPE 1"
+.TH VIPE 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+vipe \- edit pipe
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+command1 | vipe | command2
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+vipe allows you to run your editor in the middle of a unix pipeline and
+edit the data that is being piped between programs. Your editor will
+have the full data being piped from command1 loaded into it, and when you
+close it, that data will be piped into command2.
+.SH "ARGUMENTS"
+.IX Header "ARGUMENTS"
+vipe takes an argument \-\-suffix that can be used to provide a file
+extension to the temp file generated.  This enables editors to provide
+syntax highlighting and activate modes.  For example, you can call vipe
+like
+.PP
+.Vb 1
+\&  vipe \-\-suffix csv
+.Ve
+.PP
+to create a tempfile with .csv extensions which makes Emacs (or your
+favorite editor) launch in \s-1CSV\s0 major mode.
+.SH "ENVIRONMENT VARIABLES"
+.IX Header "ENVIRONMENT VARIABLES"
+.IP "\s-1EDITOR\s0" 4
+.IX Item "EDITOR"
+Editor to use.
+.IP "\s-1VISUAL\s0" 4
+.IX Item "VISUAL"
+Also supported to determine what editor to use.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2006 by Joey Hess <id@joeyh.name>
+.PP
+Licensed under the \s-1GNU GPL.\s0
diff -ruN old/zrun.1 new/zrun.1
--- old/zrun.1	1970-01-01 01:00:00.000000000 +0100
+++ new/zrun.1	2021-10-27 13:36:52.915625327 +0100
@@ -0,0 +1,166 @@
+.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is >0, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{\
+.    if \nF \{\
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{\
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "ZRUN 1"
+.TH ZRUN 1 "2021-09-29" "moreutils" " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+zrun \- automatically uncompress arguments to command
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+zrun command file.gz [...]
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+Prefixing a shell command with \*(L"zrun\*(R" causes any compressed files that are
+arguments of the command to be transparently uncompressed to temp files
+(not pipes) and the uncompressed files fed to the command.
+.PP
+This is a quick way to run a command that does not itself support
+compressed files, without manually uncompressing the files.
+.PP
+The following compression types are supported: gz bz2 Z xz lzma lzo
+.PP
+If zrun is linked to some name beginning with z, like zprog, and the link is
+executed, this is equivalent to executing \*(L"zrun prog\*(R".
+.SH "BUGS"
+.IX Header "BUGS"
+Modifications to the uncompressed temporary file are not fed back into the
+input file, so using this as a quick way to make an editor support
+compressed files won't work.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright 2006 by Chung-chieh Shan <ccshan@post.harvard.edu>
